{
  "name": "packing-tracking",
  "version": "1.0.0",
  "description": "A project to keep track of what item is in what box while moving.",
  "bin": {
    "packing-tracking": "bin/packing-tracking.js"
  },
  "scripts": {
    "prettier": "pretty-quick",
    "postinstall": "ts-node scripts/install-handler-deps.ts",
    "docker-hasura-up": "cd hasura && docker-compose up -d && npm run wait-until-hasura-ready && npm run apply-hasura-all-dev",
    "docker-hasura-down": "cd hasura && docker-compose down && docker volume prune -f",
    "pretest": "npm run docker-hasura-up",
    "posttest": "",
    "wait-until-hasura-ready": "bash -c 'while [[ \"$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/healthz)\" != \"200\" ]]; do sleep 5; done'",
    "dbml": "cd SQL && dbdocs",
    "build-dbml": "cd SQL && dbdocs build database.dbml --project=packing_tracking",
    "build-postgres": "cd SQL && dbml2sql database.dbml -o schema.sql",
    "build-dbml-from-postgres": "cd SQL && sql2dbml schema.sql --postgres -o test.sql",
    "hasura-console-dev": "cd hasura && hasura console --endpoint http://localhost:8080 --admin-secret test",
    "apply-hasura-migrations-dev": "cd ./hasura && hasura migrate apply --endpoint http://localhost:8080 --admin-secret test",
    "apply-hasura-metadata-dev": "cd ./hasura && hasura metadata apply --endpoint http://localhost:8080 --admin-secret test",
    "apply-hasura-all-dev": "npm run apply-hasura-migrations-dev && npm run apply-hasura-metadata-dev",
    "hasura-console-prod": "URL=$(grep URL .env | cut -d '=' -f2) && cd hasura && hasura console --endpoint \"https://graphql-dev.$URL\" --admin-secret \"$(npm run --silent get-hasura-admin-secret-prod)\"",
    "hasura-console-test": "URL=$(grep URL .env | cut -d '=' -f2) && cd hasura && hasura console --endpoint \"https://graphql-dev.$URL\"",
    "getDevGraphQLUrl": "echo \"$(aws ssm get-parameter --name Dev-PackingTrackingSubdomainParameter| jq -r '.Parameter.Value')\"",
    "apply-hasura-migrations-prod": "URL=$(npm run --silent getDevGraphQLUrl) && cd ./hasura && hasura migrate apply --endpoint \"https://$URL\" --admin-secret \"$(npm run --silent get-hasura-admin-secret-dev)\"",
    "apply-hasura-metadata-prod": "URL=$(npm run --silent getDevGraphQLUrl) && cd ./hasura && hasura metadata apply --endpoint \"https://$URL\" --admin-secret \"$(npm run --silent get-hasura-admin-secret-dev)\"",
    "apply-hasura-all-prod": "npm run apply-hasura-migrations-dev && npm run apply-hasura-metadata-dev",
    "get-hasura-admin-secret-dev": "echo \"$(aws secretsmanager get-secret-value --secret-id Dev-PackingTracking-HasuraGraphqlAdminSecret | jq -r '.SecretString')\"",
    "build": "tsc",
    "watch": "tsc -w",
    "test": "jest",
    "full-test": "npm run docker-hasura-down && npm test && npm run docker-hasura-down",
    "cdk": "cdk",
    "git-secret": "git secret hide",
    "get-hasura-admin-secret-prod": "STAGE=$(grep STAGE .env | cut -d '=' -f2) && echo \"$(aws secretsmanager get-secret-value --secret-id $STAGE-PackingTracking-HasuraGraphqlAdminSecret | jq -r '.SecretString')\"",
    "rebuild": "cdk destroy --all && cdk deploy --all",
    "destroy": "cdk destroy",
    "destroyAll": "cdk destroy --all",
    "destroyAllJenkins": "cdk destroy --force --require-approval never --all",
    "deploy": "cdk deploy",
    "deployAll": "cdk deploy --all",
    "deployAllJenkins": "cdk deploy --require-approval never --all"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stefan-feltmann/packing-tracking.git"
  },
  "author": "Stefan M. Feltmann",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/stefan-feltmann/packing-tracking/issues"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged && npm test"
    }
  },
  "homepage": "https://github.com/stefan-feltmann/packing-tracking#readme",
  "devDependencies": {
    "@aws-cdk/assert": "^1.129.0",
    "@types/aws-lambda": "^8.10.84",
    "@types/jest": "^27.0.2",
    "@types/jsonwebtoken": "^8.5.5",
    "@types/node": "16.7.10",
    "aws-cdk": "^1.129.0",
    "husky": "^7.0.2",
    "jest": "^27.2.5",
    "lambda-tester": "^4.0.1",
    "prettier": "^2.4.1",
    "pretty-quick": "^3.1.1",
    "ts-jest": "^27.0.5",
    "ts-node": "^10.3.0",
    "typescript": "~4.4.2"
  },
  "dependencies": {
    "@aws-cdk/aws-apigateway": "^1.129.0",
    "@aws-cdk/aws-certificatemanager": "^1.129.0",
    "@aws-cdk/aws-ec2": "^1.129.0",
    "@aws-cdk/aws-ecs": "^1.129.0",
    "@aws-cdk/aws-ecs-patterns": "^1.129.0",
    "@aws-cdk/aws-events": "^1.129.0",
    "@aws-cdk/aws-lambda": "^1.129.0",
    "@aws-cdk/aws-lambda-nodejs": "^1.129.0",
    "@aws-cdk/aws-rds": "^1.129.0",
    "@aws-cdk/aws-route53": "^1.129.0",
    "@aws-cdk/aws-route53-targets": "^1.129.0",
    "@aws-cdk/aws-secretsmanager": "^1.175.0",
    "@aws-cdk/aws-logs": "^1.129.0",
    "@aws-cdk/aws-ssm": "^1.129.0",
    "@aws-cdk/core": "^1.129.0",
    "aws-lambda": "^1.0.6",
    "dotenv": "^10.0.0",
    "jsonwebtoken": "^8.5.1",
    "source-map-support": "^0.5.20"
  }
}
